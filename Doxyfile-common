# Doxyfile 1.8.8

# This file describes the settings to be used by the documentation system
# doxygen (www.doxygen.org) for a project.
#
# All text after a double hash (##) is considered a comment and is placed in
# front of the TAG it is preceding.
#
# All text after a single hash (#) is considered a comment and will be ignored.
# The format is:
# TAG = value [value, ...]
# For lists, items can also be appended using:
# TAG += value [value, ...]
# Values that contain spaces should be placed between quotes (\" \").

#---------------------------------------------------------------------------
# Project related configuration options
#---------------------------------------------------------------------------

# The PROJECT_NAME tag is a single word (or a sequence of words surrounded by
# double-quotes, unless you are using Doxywizard) that should identify the
# project for which the documentation is generated. This name is used in the
# title of most generated pages and in a few other places.
# The default value is: My Project.

# For config item PROJECT_NAME, default is My Project
PROJECT_NAME           = "OSVR-Core"

# For config item OUTPUT_DIRECTORY, default is
OUTPUT_DIRECTORY       = doxygen

# The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of the
# path mentioned in the documentation of a class, which tells the reader which
# header file to include in order to use a class. If left blank only the name of
# the header file containing the class definition is used. Otherwise one should
# specify the list of include paths that are normally passed to the compiler
# using the -I flag.

# For config item STRIP_FROM_INC_PATH, default is
STRIP_FROM_INC_PATH    = inc

STRIP_FROM_PATH        = inc

# If you use STL classes (i.e. std::string, std::vector, etc.) but do not want
# to include (a tag file for) the STL sources as input, then you should set this
# tag to YES in order to let doxygen match functions declarations and
# definitions whose arguments contain STL classes (e.g. func(std::string);
# versus func(std::string) {}). This also make the inheritance and collaboration
# diagrams that involve STL classes more complete and accurate.
# The default value is: NO.

# For config item BUILTIN_STL_SUPPORT, default is 0
BUILTIN_STL_SUPPORT    = YES

# If the EXTRACT_LOCAL_CLASSES tag is set to YES classes (and structs) defined
# locally in source files will be included in the documentation. If set to NO
# only classes defined in header files are included. Does not have any effect
# for Java sources.
# The default value is: YES.

# For config item EXTRACT_LOCAL_CLASSES, default is 1
EXTRACT_LOCAL_CLASSES  = NO
# Default value for CASE_SENSE_NAMES omitted

# If the SHOW_GROUPED_MEMB_INC tag is set to YES then Doxygen will add for each
# grouped member an include statement to the documentation, telling the reader
# which file to include in order to use the member.
# The default value is: NO.

# For config item SHOW_GROUPED_MEMB_INC, default is 0
SHOW_GROUPED_MEMB_INC  = YES

# If the SORT_MEMBER_DOCS tag is set to YES then doxygen will sort the
# (detailed) documentation of file and class members alphabetically by member
# name. If set to NO the members will appear in declaration order.
# The default value is: YES.

# For config item SORT_MEMBER_DOCS, default is 1
SORT_MEMBER_DOCS       = NO

# The INPUT tag is used to specify the files and/or directories that contain
# documented source files. You may enter file names like myfile.cpp or
# directories like /usr/src/myproject. Separate the files or directories with
# spaces.
# Note: If this tag is empty the current directory is searched.

# For config item INPUT, default is
INPUT                  = README.md \
                         HACKING.md \
                         inc \
                         doc \
                         examples

# The RECURSIVE tag can be used to specify whether or not subdirectories should
# be searched for input files as well.
# The default value is: NO.

# For config item RECURSIVE, default is 0
RECURSIVE              = YES

IMAGE_PATH = doc plugins/videobasedtracker/doc
MSCFILE_DIRS = doc

# If the USE_MDFILE_AS_MAINPAGE tag refers to the name of a markdown file that
# is part of the input, its contents will be placed on the main page
# (index.html). This can be useful if you have a project on for instance GitHub
# and want to reuse the introduction page also for the doxygen output.

# For config item USE_MDFILE_AS_MAINPAGE, default is
USE_MDFILE_AS_MAINPAGE = README.md

# If the GENERATE_LATEX tag is set to YES doxygen will generate LaTeX output.
# The default value is: YES.

# For config item GENERATE_LATEX, default is 1
GENERATE_LATEX         = NO

# If the MACRO_EXPANSION tag is set to YES doxygen will expand all macro names
# in the source code. If set to NO only conditional compilation will be
# performed. Macro expansion can be done in a controlled way by setting
# EXPAND_ONLY_PREDEF to YES.
# The default value is: NO.
# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.

# For config item MACRO_EXPANSION, default is 0
MACRO_EXPANSION        = YES

# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES then
# the macro expansion is limited to the macros specified with the PREDEFINED and
# EXPAND_AS_DEFINED tags.
# The default value is: NO.
# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.

# For config item EXPAND_ONLY_PREDEF, default is 0
EXPAND_ONLY_PREDEF     = YES

# The PREDEFINED tag can be used to specify one or more macro names that are
# defined before the preprocessor is started (similar to the -D option of e.g.
# gcc). The argument of the tag is a list of macros of the form: name or
# name=definition (no spaces). If the definition and the "=" are omitted, "=1"
# is assumed. To prevent a macro definition from being undefined via #undef or
# recursively expanded use the := operator instead of the = operator.
# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.

# For config item PREDEFINED, default is
PREDEFINED             = __cplusplus \
                         OSVR_DOXYGEN \
                         OSVR_HAVE_STRUCT_TIMEVAL \
                         OSVR_COMMON_EXPORT= \
                         OSVR_CLIENT_EXPORT= \
                         OSVR_CLIENTKIT_EXPORT= \
                         OSVR_CONNECTION_EXPORT= \
                         OSVR_JOINTCLIENTKIT_EXPORT= \
                         OSVR_PLUGINHOST_EXPORT= \
                         OSVR_PLUGINKIT_EXPORT= \
                         OSVR_UTIL_EXPORT= \
                         OSVR_VRPNSERVER_EXPORT= \
                         OSVR_INLINE= \
                         OSVR_CPP_ONLY(X)=X \
                         OSVR_IN= \
                         OSVR_IN_PTR= \
                         OSVR_IN_OPT= \
                         OSVR_IN_STRZ= \
                         OSVR_IN_READS(X)= \
                         OSVR_OUT= \
                         OSVR_OUT_PTR= \
                         OSVR_OUT_OPT= \
                         OSVR_INOUT= \
                         OSVR_INOUT_PTR= \
                         OSVR_INOUT_OPT= \
                         OSVR_FUNC_NONNULL(X)= \
                         OSVR_FUNC_WARN_UNUSED_RESULT= \


## TODO: turn the SAL information into something useful in the docs?
                         # OSVR_IN=/**[in]*/ \
                         # OSVR_IN_PTR=/**[in]*/ \
                         # OSVR_IN_OPT=/**[in]*/ \
                         # OSVR_IN_STRZ=/**[in]*/ \
                         # OSVR_IN_READS(X)=/**[in]*/ \
                         # OSVR_OUT=/**[out]*/ \
                         # OSVR_OUT_PTR=/**[out]*/ \
                         # OSVR_OUT_OPT=/**[out]*/ \
                         # OSVR_INOUT=/**[in,out]*/ \
                         # OSVR_INOUT_PTR=/**[in,out]*/ \
                         # OSVR_INOUT_OPT=/**[in,out]*/

# If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then this
# tag can be used to specify a list of macro names that should be expanded. The
# macro definition that is found in the sources will be used. Use the PREDEFINED
# tag if you want to use a different macro definition that overrules the
# definition found in the source code.
# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.

# For config item EXPAND_AS_DEFINED, default is
EXPAND_AS_DEFINED      = OSVR_CPP_ONLY \
                         OSVR_C_ONLY \
                         OSVR_QUAT_MEMBER \
                         OSVR_VEC_MEMBER \
                         OSVR_CALLBACK_METHODS \
                         OSVR_DEFINE_CLIENT_CALLBACK_TYPE \
                         OSVR_INTERFACE_CALLBACK_METHOD

# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is
# available from the path. This tool is part of Graphviz (see:
# http://www.graphviz.org/), a graph visualization toolkit from AT&T and Lucent
# Bell Labs. The other options in this section have no effect if this option is
# set to NO
# The default value is: NO.

# For config item HAVE_DOT, default is 0
HAVE_DOT               = YES

GENERATE_TREEVIEW = YES
DISABLE_INDEX=YES


# If the SOURCE_BROWSER tag is set to YES then a list of source files will be
# generated. Documented entities will be cross-referenced with these sources.
#
# Note: To get rid of all source code in the generated output, make sure that
# also VERBATIM_HEADERS is set to NO.
# The default value is: NO.

# For config item SOURCE_BROWSER, default is 0
SOURCE_BROWSER         = YES
VERBATIM_HEADERS       = YES


TYPEDEF_HIDES_STRUCT = NO

PROJECT_LOGO = assets/osvr-logo-for-docs.png
HTML_HEADER = doc/doxygen-header.html
HTML_FOOTER = doc/doxygen-footer.html
HTML_EXTRA_STYLESHEET = doc/customdoxygen.css
