# Set up package options
set(CPACK_PACKAGE_NAME "osvr-core")
set(CPACK_PACKAGE_VENDOR "Sensics, Inc.")
set(CPACK_PACKAGE_CONTACT "<support@osvr.com>")
set(OSVR_CORE_VERSION_1 0)
set(OSVR_CORE_VERSION_2 2)
set(OSVR_CORE_VERSION_3 0)
set(OSVR_CORE_VERSION_4 0)
set(OSVR_CORE_VERSION_STRING ${OSVR_CORE_VERSION_1}.${OSVR_CORE_VERSION_2})

include(GetGitRevisionDescription)
git_describe(GIT_REVISION_DESCRIPTION --tags --match v*)
if(GIT_REVISION_DESCRIPTION)
    string(REPLACE "v" ""
        GIT_REVISION_DESCRIPTION
        "${GIT_REVISION_DESCRIPTION}")
    set(OSVR_CORE_VERSION_STRING "${GIT_REVISION_DESCRIPTION}")
    message(STATUS "Git reports version ${OSVR_CORE_VERSION_STRING}")
    string(REGEX REPLACE ".*-g" "" OSVR_CORE_VERSION_COMMIT "${GIT_REVISION_DESCRIPTION}")
    string(REGEX REPLACE "-g.*" "" DESCRIBE_COMPONENTS "${GIT_REVISION_DESCRIPTION}")
    string(REGEX MATCHALL "[0-9]+" DESCRIBE_COMPONENTS "${DESCRIBE_COMPONENTS}")

    list(LENGTH DESCRIBE_COMPONENTS NUM_COMPONENTS)

    if(NUM_COMPONENTS GREATER 0)
        list(GET DESCRIBE_COMPONENTS 0 VERCOMPONENT)
        if(NOT ${VERCOMPONENT} EQUAL ${OSVR_CORE_VERSION_1})
            message("WARNING: need to update OSVR_CORE_VERSION_1 in Version.cmake - doesn't match tag!")
            set(OSVR_CORE_VERSION_1 ${VERCOMPONENT})
        endif()
    endif()
    if(NUM_COMPONENTS GREATER 1)
        list(GET DESCRIBE_COMPONENTS 1 VERCOMPONENT)
        if(NOT ${VERCOMPONENT} EQUAL ${OSVR_CORE_VERSION_2})
            message("WARNING: need to update OSVR_CORE_VERSION_2 in Version.cmake - doesn't match tag!")
            set(OSVR_CORE_VERSION_2 ${VERCOMPONENT})
        endif()
    endif()
    if(NUM_COMPONENTS GREATER 2)
        list(GET DESCRIBE_COMPONENTS 2 OSVR_CORE_VERSION_3)
    endif()

    if(NUM_COMPONENTS GREATER 3)
        message(FATAL_ERROR "Need to update Version.cmake - currently assumes we get 2 version components from the tag and the third from the commit number, while we got more than that!")
    endif()
else()
    message(STATUS "Could not get revision information from Git! Calling this just version ${OSVR_CORE_VERSION_STRING}!")
endif()

if(NOT "$ENV{BUILD_TAG}" STREQUAL "")
    set(OSVR_CORE_BUILD_TAG "$ENV{BUILD_TAG}")
    message(STATUS "Detected CI build tag ${OSVR_CORE_BUILD_TAG}")
endif()

if(OSVR_CORE_BUILD_TAG AND OSVR_OFFICIAL)
    message(STATUS "Detected an official build environment!")
    set(OSVR_CORE_OFFICIAL_BUILD TRUE)
endif()

set(OSVR_VERSION ${OSVR_CORE_VERSION_1}.${OSVR_CORE_VERSION_2})
set(CPACK_PACKAGE_VERSION_MAJOR ${OSVR_CORE_VERSION_1})
set(CPACK_PACKAGE_VERSION_MINOR ${OSVR_CORE_VERSION_2})
set(CPACK_PACKAGE_VERSION_PATCH ${OSVR_CORE_VERSION_3})
set(CPACK_PACKAGE_VERSION ${OSVR_CORE_VERSION_STRING})

if(WIN32)
    set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}-${CMAKE_CXX_COMPILER_ID}")
    if(MSVC)
        include(GetMSVCVersion)
        get_msvc_major_minor_version(_vs_major _vs_minor)
        set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_FILE_NAME}${_vs_major}${_vs_minor}")
        set(OSVR_INTERNAL_API_VARIANT "Visual Studio ${_vs_major}.${_vs_minor}")
    endif()

    if(CMAKE_CXX_SIZEOF_DATA_PTR EQUAL 8)
        set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_FILE_NAME}-64bit")
        set(OSVR_BIT_VARIANT "64-bit")
    else()
        set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_FILE_NAME}-32bit")
        set(OSVR_BIT_VARIANT "32-bit")
    endif()
endif()
